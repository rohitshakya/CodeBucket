class MinStack {
public:
    vector<int> min_s;              // stores min in topp
    vector<int> s;             // stores no. linewise irrespective of min max
    int topp;

    MinStack() {
        topp=-1;
        
    }
    
    void push(int x)
    {
        if(topp==-1)
        {
            topp++;
             min_s.push_back(x);
        
        }
        else
        {
            topp++;
            min_s.push_back(min(x, min_s[topp-1]));
        }
        s.push_back(x);                      //store all
            
    }
    
    void pop()
    {
        
     topp--;
       min_s.pop_back();
        s.pop_back();
    }
    
    int top() {
        if (topp==-1)
            return -1;
        return s[topp];
    }
    
    int getMin() {
    
        return min_s[topp];
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(x);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
