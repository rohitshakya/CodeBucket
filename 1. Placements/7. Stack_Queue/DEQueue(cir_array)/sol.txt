
#include<iostream>
using namespace std;
#define SIZE 10
class dequeue {
   int a[20],f,r;
   public:
     
dequeue()
{
   f=-1;
   r=-1;
}
void insert_at_end(int i)
{
   if((f==r+1) || (f==0 && r==SIZE-1))
   {
      cout<<"\n insertion is not possible, overflow!!!!";
   }
   else if(f==-1 && r==-1)
   {
       f=0;
       r=0;
   }
   else if(r==SIZE-1)
   {
       r=0;
   }
   else
      r++;
    a[r]=i;
    cout<<"\nInserted item is"<<a[r];
   
}

void insert_at_beg(int i)
{
   if((f==0 && r==SIZE-1) ||(f==r+1))
   {
      cout<<"\n insertion is not possible, overflow!!!!";
   }
   else if(f==-1 && r==-1)
   {
       f=0;
       r=0;
   }
   else if(f==0)
   {
       f=SIZE-1;
   }
   else
      f--;
    a[f]=i;
    cout<<"\nInserted item is"<<a[f];
   
}
void delete_fr_front()
{
    int temp;
   if(f==-1)
   {
      cout<<"\ndeletion is not possible::dequeue is empty";
      return;
   }
   
   else if(f==r)    // one ele only
   { 
       temp=a[f];
       f=-1;
       r=-1;
   }
   else if(f==SIZE-1)
   {
       temp=a[f];
       f=0;
   }
   else
   {
       temp=a[f];
       f++;
   }
    cout<<"\n element deleted from front:: "<<temp; 
}


   void delete_fr_rear()
   {
       int temp;
   if(r==-1)
   {
      cout<<"\ndeletion is not possible::dequeue is empty";
      return;
   }
   
   else if(f==r)    // one ele only
   {
       temp=a[r];
       f=-1;
       r=-1;
   }
   else if(r==0)
   {
       temp=a[r];
       r=SIZE-1;
   }
   else
   {
     temp=a[r];
      r--;
   }
    cout<<"\n element deleted from end :: "<<temp;
   }
   
   void show() {
      if(f==-1 && r==-1)
      {
         cout<<"Dequeue is empty";
      }
      else
      {
          cout<<"\n DEQUE is:: ";
         for(int i=f;i<=r;)
         {
            cout<<a[i]<<" ";
            i=(i+1)%SIZE;
         }
      }
   }
 };
   int main()
   {
   
      dequeue d;
            d.insert_at_beg(1);
            d.insert_at_beg(2);
            d.insert_at_end(3);
            d.delete_fr_rear();
            d.delete_fr_front();
            d.show();
    
     }



