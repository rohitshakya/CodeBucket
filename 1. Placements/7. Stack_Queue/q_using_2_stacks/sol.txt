class MyQueue {
public:
   stack <int> s1,s2;

    /** Push element x to the back of queue. */
    void push(int x) {
       if(s1.empty())
           s1.push(x);
        else
        { 
            while(!s1.empty())
            {    // copy s1 into s2 in reverse order
            int y=s1.top();
            s1.pop();
            s2.push(y);
           }
            s1.push(x);
            // now put all ele back to s1 from s2 in prev normal order
            while(!s2.empty())
            {
                int y=s2.top();
                s2.pop();
                s1.push(y);
            }
        }
    }
    
    /** Removes the element from in front of queue and returns that element. */
    int pop() {
        int y=s1.top();        
        s1.pop();
        return y;
    }
    
    /** Get the front element. */
    int peek() {
        int y=s1.top();        
        return y;
       }
    
    /** Returns whether the queue is empty. */
    bool empty() {
        return s1.empty();
        
    }
};




